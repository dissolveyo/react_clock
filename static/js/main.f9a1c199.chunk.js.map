{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["formatDate","date","toUTCString","slice","Clock","state","Date","handleTimeUpdate","this","window","setInterval","updatedDate","updatedTime","setState","console","info","prevProps","updatedName","props","clockName","prevName","debug","clearInterval","formattedTime","className","Component","getRandomName","value","now","toString","App","hasClock","handleNameUpdate","document","addEventListener","e","preventDefault","ReactDOM","render","getElementById"],"mappings":"qMAEA,SAASA,EAAWC,GAClB,OAAOA,EAAKC,cAAcC,OAAO,IAAK,GAWjC,IAAMC,EAAb,4MACEC,MAA8B,CAC5BJ,KAAM,IAAIK,MAFd,EAKEC,iBAAmB,EALrB,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,iBAAmBE,OAAOC,aAAY,WACzC,IAAMC,EAAc,IAAIL,KAClBM,EAAcZ,EAAWW,GAE/B,EAAKE,SAAS,CAAEZ,KAAMU,IAEtBG,QAAQC,KAAKH,KACZ,OAfP,gCAkBE,SAAmBI,GACjB,IAAMC,EAAcT,KAAKU,MAAMC,UACzBC,EAAWJ,EAAUG,UAEvBC,IAAaH,GAEfH,QAAQO,MAAR,uBAA8BD,EAA9B,eAA6CH,MAxBnD,kCA4BE,WACEK,cAAcd,KAAKD,oBA7BvB,oBAgCE,WACE,IAAQY,EAAcX,KAAKU,MAAnBC,UAEFI,EAAgBvB,EADLQ,KAAKH,MAAdJ,MAGR,OACE,sBAAKuB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACGD,WA9CX,GAA2BE,a,MCV3B,SAASC,IACP,IAAMC,EAAQrB,KAAKsB,MAAMC,WAAW1B,OAAO,GAE3C,MAAM,SAAN,OAAgBwB,GAQX,IAAMG,EAAb,4MACEzB,MAA4B,CAC1B0B,UAAU,EACVZ,UAAW,WAHf,EAMEa,iBAAmB,EANrB,uDAQE,WAA2B,IAAD,OACxBxB,KAAKwB,iBAAmBvB,OAAOC,aAAY,WACzC,EAAKG,SAAS,CAAEM,UAAWO,QAC1B,MAEHO,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAEC,iBACF,EAAKvB,SAAS,CAAEkB,UAAU,OAG5BE,SAASC,iBAAiB,SAAS,WACjC,EAAKrB,SAAS,CAAEkB,UAAU,SAnBhC,oBAuBE,WACE,MAAgCvB,KAAKH,MAA7B0B,EAAR,EAAQA,SAAUZ,EAAlB,EAAkBA,UAElB,OACE,sBAAKK,UAAU,MAAf,UACE,6CACCO,GACI,cAAC,EAAD,CAAOZ,UAAWA,WA9B/B,GAAyBM,aCZzBY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.f9a1c199.chunk.js","sourcesContent":["import { Component } from 'react';\n\nfunction formatDate(date: Date): string {\n  return date.toUTCString().slice(-12, -4);\n}\n\ntype ClockState = {\n  date: Date;\n};\n\ntype ClockProps = {\n  clockName: string;\n};\n\nexport class Clock extends Component<ClockProps, ClockState> {\n  state: Readonly<ClockState> = {\n    date: new Date(),\n  };\n\n  handleTimeUpdate = 0;\n\n  componentDidMount(): void {\n    this.handleTimeUpdate = window.setInterval(() => {\n      const updatedDate = new Date();\n      const updatedTime = formatDate(updatedDate);\n\n      this.setState({ date: updatedDate });\n      // eslint-disable-next-line no-console\n      console.info(updatedTime);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<ClockProps>): void {\n    const updatedName = this.props.clockName;\n    const prevName = prevProps.clockName;\n\n    if (prevName !== updatedName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevName} to ${updatedName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    clearInterval(this.handleTimeUpdate);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { date } = this.state;\n    const formattedTime = formatDate(date);\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {formattedTime}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './components';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype AppState = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, AppState> {\n  state: Readonly<AppState> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  handleNameUpdate = 0;\n\n  componentDidMount(): void {\n    this.handleNameUpdate = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock\n          && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}